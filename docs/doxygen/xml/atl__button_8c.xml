<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="atl__button_8c" kind="file" language="C++">
    <compoundname>atl_button.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">freertos/FreeRTOS.h</includes>
    <includes local="no">freertos/task.h</includes>
    <includes local="no">freertos/queue.h</includes>
    <includes local="no">driver/gpio.h</includes>
    <includes local="no">esp_log.h</includes>
    <includes refid="atl__led_8h" local="yes">atl_led.h</includes>
    <incdepgraph>
      <node id="1">
        <label>atl_button.c</label>
        <link refid="atl__button_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>atl_led.h</label>
        <link refid="atl__led_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>driver/gpio.h</label>
      </node>
      <node id="7">
        <label>esp_log.h</label>
      </node>
      <node id="3">
        <label>freertos/FreeRTOS.h</label>
      </node>
      <node id="5">
        <label>freertos/queue.h</label>
      </node>
      <node id="4">
        <label>freertos/task.h</label>
      </node>
      <node id="10">
        <label>inttypes.h</label>
      </node>
      <node id="9">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>string.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="atl__button_8c_1a5a85b9c772bbeb480b209a3e6ea92b4c" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* TAG</definition>
        <argsstring></argsstring>
        <name>TAG</name>
        <initializer>= &quot;atl-button&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function identification </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/AgroTechLab/Embedded/atl100_fw/main/atl_button.c" line="10" column="19" bodyfile="C:/AgroTechLab/Embedded/atl100_fw/main/atl_button.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="atl__button_8c_1a46ebf1f417b7838bb3c41a1f68a02d4f" prot="public" static="yes" mutable="no">
        <type>QueueHandle_t</type>
        <definition>QueueHandle_t button_evt_queue</definition>
        <argsstring></argsstring>
        <name>button_evt_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Button event queue </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/AgroTechLab/Embedded/atl100_fw/main/atl_button.c" line="13" column="22" bodyfile="C:/AgroTechLab/Embedded/atl100_fw/main/atl_button.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="atl__button_8c_1af23a0eb11ff9589330539e6b763badc8" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool button_pressed</definition>
        <argsstring></argsstring>
        <name>button_pressed</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Button pressed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/AgroTechLab/Embedded/atl100_fw/main/atl_button.c" line="14" column="6" bodyfile="C:/AgroTechLab/Embedded/atl100_fw/main/atl_button.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="atl__button_8c_1a498e51f12f1e16d2cfd9fc93be54b8f8" prot="public" static="no" mutable="no">
        <type>TaskHandle_t</type>
        <definition>TaskHandle_t atl_button_handle</definition>
        <argsstring></argsstring>
        <name>atl_button_handle</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Button task handle </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/AgroTechLab/Embedded/atl100_fw/main/atl_button.c" line="15" column="14" bodyfile="C:/AgroTechLab/Embedded/atl100_fw/main/atl_button.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="atl__button_8c_1aa9b0127d3f834772cda89611f86a7cef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void IRAM_ATTR</type>
        <definition>button_isr_handler</definition>
        <argsstring>(void *args)</argsstring>
        <name>button_isr_handler</name>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Button event handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pointer to task arguments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/AgroTechLab/Embedded/atl100_fw/main/atl_button.c" line="22" column="23" bodyfile="C:/AgroTechLab/Embedded/atl100_fw/main/atl_button.c" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="atl__button_8c_1af2d715707741359e98289fa3d91dec75" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>atl_button_task</definition>
        <argsstring>(void *args)</argsstring>
        <name>atl_button_task</name>
        <param>
          <type>void *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Button task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">args</parametername>
</parameternamelist>
<parameterdescription>
<para>- Pointer to task arguments </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/AgroTechLab/Embedded/atl100_fw/main/atl_button.c" line="32" column="13" bodyfile="C:/AgroTechLab/Embedded/atl100_fw/main/atl_button.c" bodystart="32" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="atl__button_8c_1a2f2be91386c32df7787ad7e2612853c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>atl_button_init</definition>
        <argsstring>(void)</argsstring>
        <name>atl_button_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize button task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/AgroTechLab/Embedded/atl100_fw/main/atl_button.c" line="55" column="6" bodyfile="C:/AgroTechLab/Embedded/atl100_fw/main/atl_button.c" bodystart="55" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/FreeRTOS.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/task.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;freertos/queue.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;driver/gpio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;esp_log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;atl_led.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Constants<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TAG<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;atl-button&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Global<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QueueHandle_t<sp/>button_evt_queue;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>button_pressed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal">TaskHandle_t<sp/>atl_button_handle<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IRAM_ATTR<sp/>button_isr_handler(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*args)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>button_pin<sp/>=<sp/>(uint32_t)args;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>xQueueSendFromISR(button_evt_queue,<sp/>&amp;button_pin,<sp/>NULL);<sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>atl_button_task(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*args)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>gpio_pin;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Task<sp/>looping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>button<sp/>event<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xQueueReceive(button_evt_queue,<sp/>&amp;gpio_pin,<sp/>portMAX_DELAY))<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gpio_get_level(CONFIG_ATL_BUTTON_GPIO)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_pressed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atl_led_set_color(255,<sp/>69,<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_pressed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atl_led_set_color(0,<sp/>0,<sp/>255);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>atl_button_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>cpu_core<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(CONFIG_IDF_TARGET,<sp/></highlight><highlight class="stringliteral">&quot;esp32&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>strcmp(CONFIG_IDF_TARGET,<sp/></highlight><highlight class="stringliteral">&quot;esp32s3&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0<sp/>||<sp/>strcmp(CONFIG_IDF_TARGET,<sp/></highlight><highlight class="stringliteral">&quot;esp32p4&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/></highlight><highlight class="stringliteral">&quot;Creating<sp/>button<sp/>task<sp/>at<sp/>CPU<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpu_core<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ESP_LOGI(TAG,<sp/></highlight><highlight class="stringliteral">&quot;Creating<sp/>button<sp/>task&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Configure<sp/>button<sp/>event<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_set_direction(CONFIG_ATL_BUTTON_GPIO,<sp/>GPIO_MODE_INPUT);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_pulldown_en(CONFIG_ATL_BUTTON_GPIO);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_pullup_dis(CONFIG_ATL_BUTTON_GPIO);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_set_intr_type(CONFIG_ATL_BUTTON_GPIO,<sp/>GPIO_INTR_ANYEDGE);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>button_evt_queue<sp/>=<sp/>xQueueCreate(10,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>LED<sp/>builtin<sp/>task<sp/>at<sp/>CPU<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>xTaskCreatePinnedToCore(atl_button_task,<sp/></highlight><highlight class="stringliteral">&quot;atl_button_task&quot;</highlight><highlight class="normal">,<sp/>2048,<sp/>NULL,<sp/>10,<sp/>&amp;atl_button_handle,<sp/>cpu_core);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Install<sp/>interruption<sp/>handler<sp/>at<sp/>button<sp/>event<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_install_isr_service(0);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_isr_handler_add(CONFIG_ATL_BUTTON_GPIO,<sp/>button_isr_handler,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)CONFIG_ATL_BUTTON_GPIO);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/AgroTechLab/Embedded/atl100_fw/main/atl_button.c"/>
  </compounddef>
</doxygen>
